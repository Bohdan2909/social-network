{"version":3,"sources":["assets/images/user.png","api/api.js","redux/dialogs-reducer.js","components/Users/users.module.css","components/Navbar/Navbar.module.css","components/Navbar/Navbar.jsx","utils/object-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","reportWebVitals.js","index.js","components/common/FormsControls/FormsControls.js","components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","assets/images/preloader.svg","components/common/Preloader/Preloader.js","components/common/Paginator/Paginator.module.css","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","SEND_MESSAGE","initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","module","exports","Navbar","className","s","nav","item","to","activeClassName","activeLink","active","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","fake","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","p","cn","selectedPage","pageNumber","e","User","user","src","photos","small","userPhoto","disabled","some","Users","props","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","Preloader","React","Component","compose","connect","bind","page","totalCount","Header","header","loginBlock","isAuth","SET_USER_DATA","GET_CAPTCHA_URL_SUCCESS","captchaUrl","setAuthUserData","peyload","getCaptchaUrlSuccess","getAuthUserData","url","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","validate","required","component","Input","error","style","formSummaryError","length","stopSubmit","_error","INITIALZED_SUCCESS","initialized","globalError","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","withSuspense","fallback","DialogsContainer","lazy","ProfileContainer","App","catchAllUnhandleErrors","promiseRejectionEvent","alert","initializeApp","addEventListener","removeEventListener","path","render","AppContainer","withRouter","promise","Promise","all","SamuraiJSApp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById","FormControl","input","meta","child","hasError","touched","formControl","children","Textarea","restprops","createField","validators","text","value","maxLengthCreator","maxLength","backgroundColor","preloader","DELETE_POST","ADD_POST","SET_USER_PROFILE","SET_STATUS","SAVE_PHOTO_SUCCESS","posts","likesCount","addPostActionCreator","newPostText","setStatus","getUserProfile","file","getState","reject","newPost","postId"],"mappings":"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","file":"static/js/main.be526abe.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/user.96e310a6.png\";","import * as axios from \"axios\";\r\n\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers:     {\r\n        \"API-KEY\": \"c2f90438-3d8c-4025-9d7f-4e381806a08e\"\r\n    }\r\n});\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    \r\n    follow (userId) {\r\n        return instance.post(`follow/${userId}`)\r\n        \r\n    },\r\n    unfollow (userId) {\r\n       return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please profileAPI object.')\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, { status: status });\r\n    },\r\n    savePhoto(photoFile) {\r\n        let formData = new FormData ();\r\n        formData.append(\"image\", photoFile)\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n    saveProfile (profile) {\r\n        return instance.put(`profile`, profile);\r\n    }\r\n}\r\n export const authAPI = {\r\n    me () {\r\n    return instance.get(`auth/me`)\r\n    },\r\n    login (email, password, rememberMe=false, captcha=null) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha})\r\n        },\r\n        logout () {\r\n            return instance.delete(`auth/login`)\r\n            }\r\n}\r\nexport const securityAPI = {\r\n    getCaptchaUrl () {\r\n    return instance.get(`security/get-captcha-url`)\r\n\r\n}\r\n}\r\n\r\n\r\n","\r\nconst SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrew'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your it-kamasutra?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__2TjNc\",\"selectedPage\":\"users_selectedPage__2y09y\",\"loginBlock\":\"users_loginBlock__2vkrn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1PCJN\",\"item\":\"Navbar_item__3jRaR\",\"activeLink\":\"Navbar_activeLink__3tJN8\"};","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n\r\n            <div className={s.item}>\r\n                <a>News</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Settings</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","export const  updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\nreturn items.map(u => {\r\n   if (u[objPropName] === itemId) {\r\n       return { ...u, ...newObjProps }\r\n   }\r\n})\r\n}\r\n","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [],\r\n    fake: 10\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true} )\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false} )\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n}\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import React, { useState } from 'react';\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from 'classnames';\r\n\r\nlet Paginator = ({ totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10 }) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div className={styles.paginator}>\r\n        {portionNumber > 1 &&\r\n            <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button>}\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber)}\r\n                    key={p}\r\n                    onClick={(e) => {\r\n                        onPageChanged(p);\r\n                    }}>{p}</span>\r\n            })}\r\n        {portionCount > portionNumber &&\r\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button>}\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport styles from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nlet User = ({ user, followingInProgress, unfollow, follow }) => {\r\n    return (\r\n        <div>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                            className={styles.userPhoto} />\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {user.followed\r\n                        ? <button disabled={followingInProgress\r\n                            .some(id => id === user.id)}\r\n                            onClick={() => { unfollow(user.id) }}>\r\n                            Unfollow</button>\r\n                        : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                            onClick={() => { follow(user.id) }}>\r\n                            Follow</button>}\r\n\r\n                </div>\r\n            </span>\r\n            <span>\r\n                <span>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n                </span>\r\n                <span>\r\n                    <div>{\"user.location.country\"}</div>\r\n                    <div>{\"user.location.city\"}</div>\r\n                </span>\r\n            </span>\r\n        </div>)\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\r\n    return <div>\r\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                   totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n        <div>\r\n            {\r\n                users.map(u => <User user={u}\r\n                                     followingInProgress={props.followingInProgress}\r\n                                     key={u.id}\r\n                                     unfollow={props.unfollow}\r\n                                     follow={props.follow}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Users;","import { createSelector } from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n   return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n   return users.filter(u=>true)\r\n})\r\n\r\n\r\n \r\n\r\nexport const getPageSize = (state) => {\r\n   return state.usersPage.pageSize;\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n   return state.usersPage.totalUsersCount;\r\n} \r\nexport const getCurrentPage = (state) => {\r\n   return state.usersPage.currentPage;\r\n} \r\nexport const getIsFetching = (state) => {\r\n   return state.usersPage.isFetching;\r\n} \r\nexport const getFollowingInProgress = (state) => {\r\n   return state.usersPage.followingInProgress;\r\n} ","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    unfollow, toggleFollowingProgress, requestUsers\r\n} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers})\r\n)(UsersContainer)","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src='https://logos-world.net/wp-content/uploads/2020/04/Huawei-Logo.png' />\r\n\r\n        <div className={s.loginBlock}>\r\n            { props.isAuth \r\n                ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div> \r\n                : <NavLink to={'/login'}>Login</NavLink> }\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import { stopSubmit } from \"redux-form\";\r\nimport { authAPI, securityAPI } from \"../api/api\";\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'samurai-network/auth/GET_CAPTCHA_URL_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null // if null the captcha is not required\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n\r\n            return {\r\n                ...state,\r\n                ...action.peyload\r\n               \r\n            }\r\n            case GET_CAPTCHA_URL_SUCCESS: \r\n            return {\r\n                ...state,\r\n                ...action.peyload\r\n\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({type: SET_USER_DATA, peyload: {userId, email, login, isAuth}  })\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({type: GET_CAPTCHA_URL_SUCCESS,  peyload: {captchaUrl} })\r\n\r\nexport const getAuthUserData = () => (dispatch) => {\r\n    return authAPI.me()\r\n    .then(response => {\r\n        if (response.data.resultCode === 0) {\r\n            let {id, login, email} = response.data.data;\r\n            dispatch(setAuthUserData(id, email, login, true));\r\n        }\r\n    });\r\n}\r\n\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe, captcha);\r\n    if (response.data.resultCode === 0) {\r\n        // success, get auth data\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n \r\n    let response = await securityAPI.getCaptchaUrl()\r\n    const captchaUrl = response.data.url;\r\n    dispatch (getCaptchaUrlSuccess(captchaUrl));\r\n };\r\n\r\nexport const logout = () => async (dispatch) => {\r\n   let response = await authAPI.logout()\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false));\r\n        };\r\n    \r\n};\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport { logout} from \"../../redux/auth-reducer\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n   \r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout})(HeaderContainer);","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from '../common/FormsControls/FormsControls.module.css'\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={\"Email\"} name={\"email\"}\r\n                       validate={[required]}\r\n                       component={Input}/>\r\n            </div>\r\n            <div>\r\n                <Field placeholder={\"Password\"} name={\"password\"} type={\"password\"}\r\n                       validate={[required]}\r\n                       component={Input}/>\r\n            </div>\r\n            <div>\r\n                <Field component={Input} name={\"rememberMe\"} type={\"checkbox\"}/> remember me\r\n            </div>\r\n\r\n            {props.captchaUrl && <img src={props.captchaUrl}/>}\r\n\r\n            {props.captchaUrl &&\r\n            <div>\r\n                <Field component={Input} placeholder={'Symbols from image'} name={\"captcha\"} validate={[required]} /> \r\n            </div>\r\n             }\r\n            <div>\r\n              {props.error &&  <div className={style.formSummaryError}>\r\n                    {props.error}\r\n                </div>\r\n              }\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm =  reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl} />\r\n    </div>\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login} )(Login);   ","import { stopSubmit } from \"redux-form\";\r\nimport { authAPI } from \"../api/api\";\r\nimport { getAuthUserData } from \"./auth-reducer\";\r\n\r\nconst INITIALZED_SUCCESS = 'INITIALZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n    globalError: null\r\n    \r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALZED_SUCCESS:\r\n\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n               \r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const initializedSuccess = () =>({type: INITIALZED_SUCCESS})\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise=dispatch(getAuthUserData());\r\n    //dispatch(somethingelse());\r\n    //dispatch(somethingelse());\r\n    //dispatch(somethingelse());\r\n\r\n    Promise.all([promise]).\r\n    then (()=> {\r\n      dispatch(initializedSuccess())\r\n    })\r\n\r\n  \r\n}\r\n\r\nexport default appReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n//let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\n//window.store = store;\r\n\r\n\r\nexport default store;","import React, { Suspense } from 'react';\r\n\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n\r\n   return (props) => {\r\n      return <Suspense fallback={<div>Loading...</div>}>\r\n         <Component {...props} />\r\n      </Suspense>\r\n   };\r\n}","import './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport { Route, withRouter } from \"react-router-dom\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from './components/Login/Login';\nimport React, { Component, Suspense } from 'react'\nimport { connect } from 'react-redux';\nimport {initializeApp } from './redux/app-reducer'\nimport { compose } from 'redux';\nimport Preloader from './components/common/Preloader/Preloader';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/redux-store\";\nimport { withSuspense } from './hoc/withSuspense';\n\n\nconst DialogsContainer = React.lazy (() => import ('./components/Dialogs/DialogsContainer'))\nconst ProfileContainer = React.lazy (() => import ('./components/Profile/ProfileContainer'))\n\n class App extends Component {\n     catchAllUnhandleErrors = (promiseRejectionEvent) => {\n          alert (\"Some errors\");\n         /*console.error (promiseRejectionEvent);*/\n     }\n    componentDidMount() {   \n\n        this.props.initializeApp ()\n        window.addEventListener (\"unhandlerejection\", this.catchAllUnhandleErrors); \n    }\n    componentWillUnmount () {\n        window.removeEventListener (\"unhandlerejection\", this.catchAllUnhandleErrors); \n    }\n    render() {\n        if (!this.props.initialized) {\n        return <Preloader/>\n        }\n        return (\n            <div className='app-wrapper'>\n            <HeaderContainer />\n            <Navbar />\n            <div className='app-wrapper-content'>\n                <Route path='/dialogs'\n                     render={withSuspense(DialogsContainer)} />\n\n                <Route path='/profile/:userId?'\n                    render={withSuspense(ProfileContainer)} />\n\n                <Route path='/users'\n                    render={() => <UsersContainer />} />\n\n                <Route path='/login'\n                    render={() => <Login />} />\n            </div>\n        </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\nlet AppContainer=compose(\n    withRouter,\n    connect (mapStateToProps, {initializeApp})) (App)\n\nconst SamuraiJSApp = (props) => {\n    return (\n    <BrowserRouter>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </BrowserRouter> \n    \n    )\n}\nexport default SamuraiJSApp;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SamuraiJSApp from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(<SamuraiJSApp/> , document.getElementById('root'));\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport styles from './FormsControls.module.css';\r\n\r\n\r\n\r\nconst FormControl = ({input, meta, child, ...props}) => {\r\n   let hasError= meta.touched && meta.error ;\r\n   return (\r\n      <div className={styles.formControl+\" \"+(hasError ? styles.error:'')}>\r\n         <div>\r\n         {props.children}\r\n         </div>\r\n        {hasError && <span>{meta.error}</span>}\r\n      </div>\r\n   );\r\n}\r\nexport const Textarea = (props) => {\r\n   const {input, meta, child, ...restprops}= props;\r\n   return <FormControl {...props}><textarea{...input}{...restprops}/></FormControl>\r\n};    \r\n\r\nexport const Input = (props) => {\r\n   const {input, meta, child, ...restprops}= props;\r\n   return <FormControl {...props}><input{...input}{...restprops}/></FormControl>\r\n};    \r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n   <div>\r\n       <Field placeholder={placeholder} name={name}\r\n              validate={validators}\r\n              component={component}\r\n              {...props}\r\n       /> {text}\r\n   </div>\r\n)\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__UYilj\",\"error\":\"FormsControls_error__qN2Q5\",\"formSummaryError\":\"FormsControls_formSummaryError__2jmf9\"};","export const required = value => {\r\n   if (value) return undefined;\r\n   return 'Field is required'\r\n}\r\nexport const maxLengthCreator = (maxLength) => value => {\r\n   if (value.length > maxLength) return (`Max length is ${maxLength} symbols`) ;\r\n   return 'undefined'\r\n}\r\n","export default __webpack_public_path__ + \"static/media/preloader.5788b05c.svg\";","import React from 'react';\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\n\r\nlet Preloader = (props) => {\r\n    return <div  style={ { backgroundColor: 'white' } }>\r\n        <img src={preloader} />\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__ehqPU\",\"pageNumber\":\"Paginator_pageNumber__1XlCM\",\"selectedPage\":\"Paginator_selectedPage__R62eS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2ZKKO\",\"loginBlock\":\"Header_loginBlock__WhVBf\"};","import { stopSubmit } from \"redux-form\";\r\nimport { usersAPI, profileAPI } from \"../api/api\";\r\nconst DELETE_POST = 'DELETE_POST'\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS'\r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, message: 'Hi, how are you?', likesCount: 12 },\r\n        { id: 2, message: 'It\\'s my first post', likesCount: 11 },\r\n        { id: 3, message: 'Blabla', likesCount: 11 },\r\n        { id: 4, message: 'Dada', likesCount: 11 }\r\n    ],\r\n    profile: null,\r\n    status: ' '\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return { ...state, profile: action.profile }\r\n        }\r\n        case DELETE_POST : {\r\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\r\n        }\r\n        case SAVE_PHOTO_SUCCESS:{\r\n            return {...state, profile:{...state.profile, photos: action.photos}}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const addPostActionCreator = (newPostText) => ({ type: ADD_POST, newPostText })\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile })\r\nexport const setStatus = (status) => ({ type: SET_STATUS, status })\r\nexport const deletePost = (postId) => ({ type: DELETE_POST, postId })\r\nexport const savePhotoSuccess = (photos) => ({ type: SAVE_PHOTO_SUCCESS, photos })\r\n\r\n\r\nexport const getUserProfile = (userId) => (dispatch) => {\r\n    usersAPI.getProfile(userId)\r\n        .then(response => {\r\n            dispatch(setUserProfile(response.data));\r\n        });\r\n}\r\nexport const getStatus = (userId) => (dispatch) => {\r\n    profileAPI.getStatus(userId)\r\n        .then(response => {\r\n            dispatch(setStatus(response.data));\r\n        });\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    try {\r\n   let response = await profileAPI.updateStatus(status)\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setStatus(status));\r\n            }\r\n        } \r\n        catch (error) {\r\n// dispatch(samsing...)\r\n        }\r\n}\r\nexport const savePhoto = (file) => (dispatch) => {\r\n    profileAPI.savePhoto(file)\r\n    .then(response => {\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(savePhotoSuccess(response.data.data.photos));\r\n        }\r\n    });\r\n}\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    const response = await profileAPI.saveProfile(profile);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId));\r\n    } else {\r\n        dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0] }));\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n}\r\n\r\nexport default profileReducer;"],"sourceRoot":""}
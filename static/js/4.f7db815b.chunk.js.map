{"version":3,"sources":["../node_modules/redux-form/es/Form.js","components/Dialogs/Dialogs.module.css","hoc/withAuthRedirect.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["Form","_Component","props","_this","call","this","_reduxForm","Error","_inheritsLoose","_proto","prototype","componentDidMount","registerInnerOnSubmit","onSubmit","componentDidUpdate","prevProps","render","_this$props","rest","_objectWithoutPropertiesLoose","React","createElement","Component","propTypes","PropTypes","func","isRequired","object","withReduxForm","module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","RedirectComponent","to","connect","DialogItem","path","id","className","s","dialog","active","name","Message","message","maxLength50","maxLengthCreator","AddMessageReduxForm","reduxForm","form","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","newMessageBody","dialogsItems","values","sendMessage","compose","dispatch","sendMessageCreator"],"mappings":"kIAAA,8EAMIA,EAAoB,SAAUC,GAGhC,SAASD,EAAKE,GACZ,IAAIC,EAIJ,GAFAA,EAAQF,EAAWG,KAAKC,KAAMH,IAAUG,MAEnCH,EAAMI,WACT,MAAM,IAAIC,MAAM,8DAGlB,OAAOJ,EAXTK,IAAeR,EAAMC,GAcrB,IAAIQ,EAAST,EAAKU,UAoBlB,OAlBAD,EAAOE,kBAAoB,WACzBN,KAAKH,MAAMI,WAAWM,sBAAsBP,KAAKH,MAAMW,WAGzDJ,EAAOK,mBAAqB,SAA4BC,GAClDV,KAAKH,MAAMW,WAAaE,EAAUF,UACpCR,KAAKH,MAAMI,WAAWM,sBAAsBP,KAAKH,MAAMW,WAI3DJ,EAAOO,OAAS,WACd,IAAIC,EAAcZ,KAAKH,MAEnBgB,GADaD,EAAYX,WAClBa,IAA8BF,EAAa,CAAC,gBAEvD,OAAoBG,IAAMC,cAAc,OAAQH,IAG3ClB,EAnCe,CAoCtBsB,aAEFtB,EAAKuB,UAAY,CACfV,SAAUW,IAAUC,KAAKC,WACzBpB,WAAYkB,IAAUG,QAETC,gBAAc5B,I,oBC/C7B6B,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,qJCG9KC,EAA6B,SAACC,GAAD,MAAY,CAC1CC,OAAQD,EAAME,KAAKD,SAETE,EAAmB,SAACb,GAAe,IACvCc,EADsC,4JAEzC,WACG,OAAK/B,KAAKH,MAAM+B,OACT,cAACX,EAAD,eAAejB,KAAKH,QADI,cAAC,IAAD,CAAUmC,GAAG,eAHN,GACZjB,IAAME,WAQtC,OADoCgB,YAASP,EAATO,CAAsCF,K,2FCH9DG,EARI,SAACrC,GAChB,IAAIsC,EAAO,YAActC,EAAMuC,GAE/B,OAAO,qBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACH,cAAC,IAAD,CAASR,GAAIG,EAAb,SAAoBtC,EAAM4C,UCDnBC,EAJC,SAAC7C,GACb,OAAO,qBAAKwC,UAAWC,IAAEC,OAAlB,SAA2B1C,EAAM8C,W,mDCMxCC,EAAcC,YAAkB,IAuC9BC,EAAsBC,YAAU,CAAEC,KAAM,cAAlBD,EAZL,SAAClD,GACpB,OACI,eAACF,EAAA,EAAD,CAAMa,SAAUX,EAAMoD,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAUV,GAAcH,KAAM,iBAAkBc,YAAa,yBAExG,8BACI,kDAODC,EAvCC,SAAC3D,GAEb,IAAI8B,EAAQ9B,EAAM4D,YAEdC,EAAkB/B,EAAMgC,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYpB,KAAMoB,EAAEpB,KAAiBL,GAAIyB,EAAEzB,IAAZyB,EAAEzB,OAC1E0B,EAAmBnC,EAAMoC,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAASrB,QAASqB,EAAErB,SAAcqB,EAAE5B,OAC9DT,EAAMsC,eAK3B,OAAKpE,EAAM+B,OAGP,sBAAKS,UAAWC,IAAEqB,QAAlB,UACI,qBAAKtB,UAAWC,IAAE4B,aAAlB,SACKR,IAEL,sBAAKrB,UAAWC,IAAEyB,SAAlB,UACI,8BAAMD,IACN,cAAChB,EAAD,CAAqBtC,SAZX,SAAC2D,GACnBtE,EAAMuE,YAAYD,EAAOF,yBAEH,cAAC,IAAD,CAAUjC,GAAI,Y,wBCF7BqC,sBACXpC,aAfkB,SAACN,GACnB,MAAO,CACH8B,YAAa9B,EAAM8B,gBAIF,SAACa,GACtB,MAAO,CACHF,YAAa,SAACH,GACVK,EAASC,YAAmBN,SAOpCnC,IAFWuC,CAGbb","file":"static/js/4.f7db815b.chunk.js","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withReduxForm } from './ReduxFormContext';\n\nvar Form = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n\n    if (!props._reduxForm) {\n      throw new Error('Form must be inside a component decorated with reduxForm()');\n    }\n\n    return _this;\n  }\n\n  var _proto = Form.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.props._reduxForm.registerInnerOnSubmit(this.props.onSubmit);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.props.onSubmit !== prevProps.onSubmit) {\n      this.props._reduxForm.registerInnerOnSubmit(this.props.onSubmit);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _reduxForm = _this$props._reduxForm,\n        rest = _objectWithoutPropertiesLoose(_this$props, [\"_reduxForm\"]);\n\n    return /*#__PURE__*/React.createElement(\"form\", rest);\n  };\n\n  return Form;\n}(Component);\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  _reduxForm: PropTypes.object\n};\nexport default withReduxForm(Form);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__Tg0x_\",\"dialogsItems\":\"Dialogs_dialogsItems__2Lzz0\",\"active\":\"Dialogs_active__1khC7\",\"messages\":\"Dialogs_messages__13YKW\",\"message\":\"Dialogs_message__1QSzE\"};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n   isAuth: state.auth.isAuth\r\n});\r\nexport const withAuthRedirect = (Component) => {\r\n   class RedirectComponent extends React.Component {\r\n      render (){\r\n         if (!this.props.isAuth) return <Redirect to='/login'/>\r\n         return <Component {...this.props}/>\r\n      }\r\n   }\r\n \r\n  let ConnectedAuthRedirectComponent = connect (mapStateToPropsForRedirect) (RedirectComponent);\r\n   return ConnectedAuthRedirectComponent;\r\n}","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Redirect } from 'react-router';\r\nimport { Field, Form, reduxForm } from 'redux-form';\r\n\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\n\r\nlet maxLength50 = maxLengthCreator (50);\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} />);\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    const addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n    if (!props.isAuth) return <Redirect to={'/Login'} />\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <AddMessageReduxForm onSubmit={addNewMessage} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <Form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} validate={[required, maxLength50]} name={'newMessageBody'} placeholder={'Enter your message'} />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </Form>\r\n    )\r\n}\r\nconst AddMessageReduxForm = reduxForm({ form: 'addmessage' })(AddMessageForm)\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n\r\n/*let AuthRedirectComponent = withAuthRedirect(Dialogs);\r\n\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\r\n\r\nexport default DialogsContainer;*/"],"sourceRoot":""}
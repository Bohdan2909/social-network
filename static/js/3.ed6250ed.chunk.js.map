{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","onSubmit","handleSubmit","error","className","style","formSummaryError","createField","Input","type","Textarea","Object","keys","profile","contacts","map","key","s","contact","ProfileData","isOwner","onClick","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","Preloader","descriptionBlock","src","photos","large","userPhoto","mainPhoto","target","files","length","savePhoto","initialValues","formData","saveProfile","then","Post","item","message","likesCount","maxLength10","maxLengthCreator","MyPosts","memo","postsElements","posts","p","id","postsBlock","AddNewPostReduxForm","values","addPost","newPostText","Field","name","component","validate","required","placeholder","MyPostsContainer","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","updatestatus","compose","withRouter"],"mappings":"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","file":"static/js/3.ed6250ed.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n   isAuth: state.auth.isAuth\r\n});\r\nexport const withAuthRedirect = (Component) => {\r\n   class RedirectComponent extends React.Component {\r\n      render (){\r\n         if (!this.props.isAuth) return <Redirect to='/login'/>\r\n         return <Component {...this.props}/>\r\n      }\r\n   }\r\n \r\n  let ConnectedAuthRedirectComponent = connect (mapStateToPropsForRedirect) (RedirectComponent);\r\n   return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3xuUo\",\"mainPhoto\":\"ProfileInfo_mainPhoto__1g1nM\",\"contact\":\"ProfileInfo_contact__1ZIIg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1tbpC\",\"posts\":\"MyPosts_posts__hdP6v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__10YHk\"};","import React, {useState, useEffect} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n    useEffect( ()  => {\r\n       setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { !editMode &&\r\n            <div>\r\n               <b>Status:</b> <span onDoubleClick={ activateEditMode }>{props.status || \"-------\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={ deactivateEditMode }\r\n                       value={status} />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport {createField, Input, Textarea} from '../../common/FormsControls/FormsControls';\r\nimport s from './ProfileInfo.module.css';\r\nimport style from '../../common/FormsControls/FormsControls.module.css'\r\n\r\n\r\nconst ProfileDataForm = (props) => {\r\n   return (\r\n      <form onSubmit={props.handleSubmit}>\r\n          <div><button>Save</button></div>\r\n          {props.error && <div className={style.formSummaryError}> {props.error}</div> }\r\n          <div>\r\n              <b>Full Name:</b>  {createField (\"Full Name\", \"fullName\", [], Input)}\r\n          </div>\r\n          <div>\r\n              <b>Looking for a job:</b> {createField ('', \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n\r\n             \r\n          </div>\r\n         \r\n              <div>\r\n                  <b>My professional skills:</b> {createField ('My professional skills', \"lookingForAJobDescription\", [], Textarea)}\r\n        \r\n              </div>\r\n          \r\n\r\n          <div>\r\n              <b>About me:</b>\r\n              {createField ('About Me', \"aboutMe\", [], Textarea)}\r\n          </div>\r\n         <div>\r\n              <b>Contacts:</b> {Object.keys(props.profile.contacts)\r\n                  .map(key => { return <div key={key} className={s.contact}>\r\n                     <b>{key}:{createField(\"key\", \"contacts.\"+key, [] ,Input)}</b>\r\n                  </div>\r\n                })}\r\n          </div>                                                                                                             \r\n      </form>\r\n  \r\n   )}\r\n const ProfileDataFormReduxForm = reduxForm ({form:\"edit-profile\"})(ProfileDataForm)\r\nexport default ProfileDataFormReduxForm;","import React, { useState } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport ProfileDataForm from './ProfileDataForm';\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    const onSubmit = (formData) => {\r\n        props.saveProfile(formData).then(() => {\r\n                setEditMode(false);\r\n            }\r\n        );\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={props.profile.photos.large || userPhoto} className={s.mainPhoto} />\r\n                {props.isOwner && < input type={\"file\"} onChange={onMainPhotoSelected} />}\r\n\r\n                {editMode ? <ProfileDataForm initialValues={props.profile} profile={props.profile} onSubmit={onSubmit}/> :\r\n                <ProfileData goToEditMode={() => { setEditMode(true) }}  profile={props.profile} isOwner={props.isOwner} />}\r\n                \r\n\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} />\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst ProfileData = (props) => {\r\n    return (\r\n        <div>\r\n            {props.isOwner && <div><button onClick={props.goToEditMode}>Edit</button></div>}\r\n            <div>\r\n                <b>Full Name:</b>  {props.profile.fullName}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job:</b>  {props.profile.lookingForAJob ? \"yes\" : \"no\"}\r\n            </div>\r\n            {props.profile.lookingForAJob &&\r\n                <div>\r\n                    <b>My professional skills:</b>  {props.profile.lookingForAJobDescription}\r\n                </div>\r\n            }\r\n\r\n            <div>\r\n                <b>About me:</b> {props.profile.aboutMe}\r\n            </div>\r\n            <div>\r\n                <b>Contacts:</b> {Object.keys(props.profile.contacts)\r\n                    .map(key => { return <Contact key={key} contactTitle={key} contactValue={props.profile.contacts[key]} /> })} {/* contatcs це обєкт тому його не може показати тому створюю нову компоненту contcts*/}\r\n            </div>                                                                                                               {/* Object.keys пробігає по обєкту contacts і засуне значеня в масив строк*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n    return <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQrW-Jw-ZMy8KVpsK728K3CAEogswHduRgqog&usqp=CAU' />\r\n        { props.message }\r\n          <div>\r\n        <span>like</span> { props.likesCount }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\nlet maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = React.memo (props => {\r\n    let postsElements = props.posts.map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount} />);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => { props.addPost(values.newPostText); }\r\n\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostReduxForm onSubmit={onAddPost} />\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nlet AddNewPostForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={'newPostText'}\r\n                    component={Textarea}\r\n                    validate={[required, maxLength10]}\r\n                    placeholder='Post message' />\r\n\r\n            </div>\r\n            <div>\r\n                <button >Add post</button>\r\n            </div>\r\n        </form >\r\n    )\r\n}\r\nlet AddNewPostReduxForm = reduxForm({ form: 'ProfileAddNewPostForm' })(AddNewPostForm)\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      \r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo savePhoto = {props.savePhoto} \r\n            isOwner= {props.isOwner} \r\n            profile={props.profile} \r\n            status={props.status} \r\n            updateStatus={props.updateStatus}\r\n            saveProfile={props.saveProfile}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfile,getStatus,updateStatus, savePhoto,saveProfile} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile () {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile (userId);\r\n        this.props.getStatus(userId) \r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n        \r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId ) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n    render() {\r\n        \r\n        return (\r\n            <Profile {...this.props}\r\n            isOwner = {!this.props.match.params.userId} \r\n            profile={this.props.profile}\r\n            status={this.props.status}\r\n            updatestatus={this.props.updatestatus}\r\n            savePhoto={this.props.savePhoto }\r\n            />\r\n        )\r\n    }\r\n}\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId:state.auth.userId,\r\n    isAuth: state.auth.isAuth       \r\n});\r\n\r\n export default compose ( \r\n     connect(mapStateToProps, {getUserProfile,getStatus,updateStatus, savePhoto, saveProfile}),\r\n      withRouter, withAuthRedirect)(ProfileContainer)\r\n\r\n/*let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile   \r\n});\r\n\r\nlet WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\n\r\nexport default connect(mapStateToProps, {getUserProfile})(WithUrlDataContainerComponent);*/"],"sourceRoot":""}